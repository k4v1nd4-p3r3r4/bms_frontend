{"ast":null,"code":"// import { createContext, useContext, useState } from 'react';\n// import axios from '../Api/axios';\n// const AuthContent = createContext({\n// \tuser: null,\n// \tsetUser: () => {},\n// \tcsrfToken: () => {},\n// });\n\n// export const AuthProvider = ({ children }) => {\n// \tconst [user, _setUser] = useState(\n// \t\tJSON.parse(localStorage.getItem('user')) || null\n// \t);\n\n// \t// set user to local storage\n// \tconst setUser = (user) => {\n// \t\tif (user) {\n// \t\t\tlocalStorage.setItem('user', JSON.stringify(user));\n// \t\t} else {\n// \t\t\tlocalStorage.removeItem('user');\n// \t\t}\n// \t\t_setUser(user);\n// \t};\n\n// \t// csrf token generation for guest methods\n// \tconst csrfToken = async () => {\n// \t\tawait axios.get('http://localhost:8000/sanctum/csrf-cookie');\n// \t\treturn true;\n// \t};\n\n// \treturn (\n// \t\t<AuthContent.Provider value={{ user, setUser, csrfToken }}>\n// \t\t\t{children}\n// \t\t</AuthContent.Provider>\n// \t);\n// };\n\n// export const useAuth = () => {\n// \treturn useContext(AuthContent);\n// };","map":{"version":3,"names":[],"sources":["C:/xampp/htdocs/Group project Level 3/Frontend/bms_frontend/admin_dashboard/src/contexts/AuthContext.jsx"],"sourcesContent":["// import { createContext, useContext, useState } from 'react';\n// import axios from '../Api/axios';\n// const AuthContent = createContext({\n// \tuser: null,\n// \tsetUser: () => {},\n// \tcsrfToken: () => {},\n// });\n\n// export const AuthProvider = ({ children }) => {\n// \tconst [user, _setUser] = useState(\n// \t\tJSON.parse(localStorage.getItem('user')) || null\n// \t);\n\n// \t// set user to local storage\n// \tconst setUser = (user) => {\n// \t\tif (user) {\n// \t\t\tlocalStorage.setItem('user', JSON.stringify(user));\n// \t\t} else {\n// \t\t\tlocalStorage.removeItem('user');\n// \t\t}\n// \t\t_setUser(user);\n// \t};\n\n// \t// csrf token generation for guest methods\n// \tconst csrfToken = async () => {\n// \t\tawait axios.get('http://localhost:8000/sanctum/csrf-cookie');\n// \t\treturn true;\n// \t};\n\n// \treturn (\n// \t\t<AuthContent.Provider value={{ user, setUser, csrfToken }}>\n// \t\t\t{children}\n// \t\t</AuthContent.Provider>\n// \t);\n// };\n\n// export const useAuth = () => {\n// \treturn useContext(AuthContent);\n// };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}